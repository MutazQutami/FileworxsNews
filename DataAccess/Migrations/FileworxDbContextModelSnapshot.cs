// <auto-generated />
using System;
using FileworxNews.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FileworxNews.DataAccess.Migrations
{
    [DbContext(typeof(FileworxDbContext))]
    partial class FileworxDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.FileworxEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("SYSDATETIME()");

                    b.Property<Guid?>("CreatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME2")
                        .HasDefaultValueSql("SYSDATETIME()");

                    b.Property<Guid?>("LastModifierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.HasIndex("LastModifierId");

                    b.ToTable("Entity");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.Content", b =>
                {
                    b.HasBaseType("FileworxNews.DataAccess.Entities.FileworxEntity");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(Max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar");

                    b.ToTable("Content");
                });

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.User", b =>
                {
                    b.HasBaseType("FileworxNews.DataAccess.Entities.FileworxEntity");

                    b.Property<bool>("IsAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LogInName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasIndex("LogInName")
                        .IsUnique()
                        .HasFilter("[LogInName] IS NOT NULL");

                    b.ToTable("User");
                });

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.News", b =>
                {
                    b.HasBaseType("FileworxNews.DataAccess.Entities.Content");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.ToTable("News");
                });

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.Photo", b =>
                {
                    b.HasBaseType("FileworxNews.DataAccess.Entities.Content");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("Photo");
                });

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.FileworxEntity", b =>
                {
                    b.HasOne("FileworxNews.DataAccess.Entities.User", "Creator")
                        .WithMany("CreatedEntities")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("FileworxNews.DataAccess.Entities.User", "LastModifier")
                        .WithMany("ModifiedEntities")
                        .HasForeignKey("LastModifierId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Creator");

                    b.Navigation("LastModifier");
                });

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.Content", b =>
                {
                    b.HasOne("FileworxNews.DataAccess.Entities.FileworxEntity", null)
                        .WithOne()
                        .HasForeignKey("FileworxNews.DataAccess.Entities.Content", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.User", b =>
                {
                    b.HasOne("FileworxNews.DataAccess.Entities.FileworxEntity", null)
                        .WithOne()
                        .HasForeignKey("FileworxNews.DataAccess.Entities.User", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.News", b =>
                {
                    b.HasOne("FileworxNews.DataAccess.Entities.Content", null)
                        .WithOne()
                        .HasForeignKey("FileworxNews.DataAccess.Entities.News", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.Photo", b =>
                {
                    b.HasOne("FileworxNews.DataAccess.Entities.Content", null)
                        .WithOne()
                        .HasForeignKey("FileworxNews.DataAccess.Entities.Photo", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FileworxNews.DataAccess.Entities.User", b =>
                {
                    b.Navigation("CreatedEntities");

                    b.Navigation("ModifiedEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
